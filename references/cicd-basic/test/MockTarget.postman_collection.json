{
	"info": {
		"_postman_id": "18818783-46c7-49d1-87f8-c9fa6f121965",
		"name": "MockTarget",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET echo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Echo method\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.method).to.eql(\"GET\");",
							"});",
							"pm.test(\"Content-Type is JSON\", function () {",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.contain('application/json');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false,
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{SERVER}}/mocktarget/v1/echo",
					"protocol": "https",
					"host": [
						"{{SERVER}}"
					],
					"path": [
						"mocktarget",
						"v1",
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Content-Type is JSON\", function () {",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.contain('application/json');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false,
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{SERVER}}/mocktarget/v1/json",
					"protocol": "https",
					"host": [
						"{{SERVER}}"
					],
					"path": [
						"mocktarget",
						"v1",
						"json"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST echo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Echo method\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.method).to.eql(\"POST\");",
							"});",
							"pm.test(\"Content-Type is JSON\", function () {",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.contain('application/json');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false,
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"command\": \"greetings\" }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{SERVER}}/mocktarget/v1/echo",
					"protocol": "https",
					"host": [
						"{{SERVER}}"
					],
					"path": [
						"mocktarget",
						"v1",
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET xml",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Content-Type is XML\", function () {",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.contain('application/xml');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false,
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{SERVER}}/mocktarget/v1/xml",
					"protocol": "https",
					"host": [
						"{{SERVER}}"
					],
					"path": [
						"mocktarget",
						"v1",
						"xml"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET echo - no auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false,
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{SERVER}}/mocktarget/v1/echo",
					"protocol": "https",
					"host": [
						"{{SERVER}}"
					],
					"path": [
						"mocktarget",
						"v1",
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET echo - invalid auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false,
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer notavalidtoken",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{SERVER}}/mocktarget/v1/echo",
					"protocol": "https",
					"host": [
						"{{SERVER}}"
					],
					"path": [
						"mocktarget",
						"v1",
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET echo - empty auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false,
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{SERVER}}/mocktarget/v1/echo",
					"protocol": "https",
					"host": [
						"{{SERVER}}"
					],
					"path": [
						"mocktarget",
						"v1",
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET echo - invalid auth query",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false,
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{SERVER}}/mocktarget/v1/echo?apikey=notavalidkey",
					"protocol": "https",
					"host": [
						"{{SERVER}}"
					],
					"path": [
						"mocktarget",
						"v1",
						"echo"
					],
					"query": [
						{
							"key": "apikey",
							"value": "notavalidkey"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET echo - invalid auth key",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false,
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "notavalidkey",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{SERVER}}/mocktarget/v1/echo",
					"protocol": "https",
					"host": [
						"{{SERVER}}"
					],
					"path": [
						"mocktarget",
						"v1",
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET echo - http not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false,
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{SERVER}}/mocktarget/v1/echo",
					"protocol": "http",
					"host": [
						"{{SERVER}}"
					],
					"path": [
						"mocktarget",
						"v1",
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET echo - not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false,
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{SERVER}}/mocktarget/v1/echo2",
					"protocol": "https",
					"host": [
						"{{SERVER}}"
					],
					"path": [
						"mocktarget",
						"v1",
						"echo2"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{APIKEY}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "x-apikey",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}