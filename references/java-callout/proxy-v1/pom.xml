<?xml version="1.0" encoding="utf-8"?>
<!--
 Copyright 2020 Google LLC

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<project xmlns="https://maven.apache.org/POM/4.0.0"
xmlns:xsi="https://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="https://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>apigee</groupId>
  <artifactId>proxy-v1</artifactId>
  <version>-</version>
  <name>proxy-v1</name>
  <packaging>pom</packaging>
  <dependencies>
    <dependency>
      <groupId>com.callout.api</groupId>
      <artifactId>java-callout</artifactId>
      <version>1.0-SNAPSHOT</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>
  <pluginRepositories>
    <pluginRepository>
      <id>central</id>
      <name>Maven Plugin Repository</name>
      <url>https://repo1.maven.org/maven2</url>
      <layout>default</layout>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
        <updatePolicy>never</updatePolicy>
      </releases>
    </pluginRepository>
  </pluginRepositories>
  <properties>
    <project.build.sourceEncoding>
    UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>
    UTF-8</project.reporting.outputEncoding>
    <org.slf4j.simpleLogger.defaultLogLevel>
    info</org.slf4j.simpleLogger.defaultLogLevel>
    <project.root.dir>${basedir}</project.root.dir>
    <target.root.dir>${basedir}/target</target.root.dir>
    <deployment.suffix>${user.name}</deployment.suffix>
    <commit />
    <branch>a local</branch>
  </properties>
  <!-- This is where you add the environment specific properties under various profile names -->
  <!-- For apigee.options, refer to "Advanced Configuration Options" under https://github.com/apigee/apigee-deploy-maven-plugin#pom-xml-sample -->
  <profiles>
    <profile>
      <id>test</id>
      <properties>
        <apigee.profile>test</apigee.profile>
        <apigee.env>test</apigee.env>
        <apigee.hosturl>https://api.enterprise.apigee.com</apigee.hosturl>
        <apigee.apiversion>v1</apigee.apiversion>
        <apigee.org>${env.APIGEE_ORG}</apigee.org>
        <apigee.username>${env.APIGEE_USER}</apigee.username>
        <apigee.password>${env.APIGEE_PASS}</apigee.password>
        <apigee.options>update</apigee.options>
        <api.northbound.domain>
        ${env.API_DOMAIN_TEST}</api.northbound.domain>
        <api.testtag>~@wip</api.testtag>
      </properties>
    </profile>
    <profile>
      <id>prod</id>
      <properties>
        <apigee.profile>prod</apigee.profile>
        <apigee.env>prod</apigee.env>
        <apigee.hosturl>
        https://api.enterprise.apigee.com</apigee.hosturl>
        <apigee.apiversion>v1</apigee.apiversion>
        <apigee.org>${env.APIGEE_ORG}</apigee.org>
        <apigee.username>${env.APIGEE_USER}</apigee.username>
        <apigee.password>${env.APIGEE_PASS}</apigee.password>
        <apigee.options>override</apigee.options>
        <apigee.override.delay>5</apigee.override.delay>
        <api.northbound.domain>
        ${env.API_DOMAIN_PROD}</api.northbound.domain>
        <api.testtag>~@wip,~@mock</api.testtag>
      </properties>
    </profile>
  </profiles>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>io.apigee.build-tools.enterprise4g</groupId>
          <artifactId>apigee-edge-maven-plugin</artifactId>
          <version>1.3.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <useSystemClassLoader>false</useSystemClassLoader>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <!-- run jslint -->
      <plugin>
        <groupId>com.cj.jshintmojo</groupId>
        <artifactId>jshint-maven-plugin</artifactId>
        <version>1.6.0</version>
        <executions>
          <execution>
            <id>jslint</id>
            <phase>validate</phase>
            <goals>
              <goal>lint</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <directories>
            <directory>apiproxy/resources/jsc</directory>
          </directories>
          <reporter>jslint</reporter>
        </configuration>
      </plugin>
      <!-- copy the full apiproxy folder to target folder -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <!--source -->
                  <directory>${project.root.dir}</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>apiproxy/**</include>
                    <include>test/integration/**</include>
                  </includes>
                </resource>
              </resources>
              <!--target -->
              <outputDirectory>${target.root.dir}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>
              ${target.root.dir}/apiproxy/resources/java</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.apigee.build-tools.enterprise4g</groupId>
        <artifactId>apigee-edge-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>configure-bundle-step</id>
            <phase>package</phase>
            <goals>
              <goal>configure</goal>
            </goals>
          </execution>
          <!--deploy bundle -->
          <execution>
            <id>deploy-bundle-step</id>
            <phase>install</phase>
            <goals>
              <goal>deploy</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.3.2</version>
        <executions>
          <!-- npm install -->
          <execution>
            <id>npm-install</id>
            <phase>validate</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>npm</executable>
              <commandlineArgs>install</commandlineArgs>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- cleaning dirs -->
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.5</version>
        <executions>
          <execution>
            <id>auto-clean-init</id>
            <phase>initialize</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
          <execution>
            <id>auto-clean-install</id>
            <phase>install</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
